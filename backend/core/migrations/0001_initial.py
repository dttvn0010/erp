# Generated by Django 3.2 on 2021-10-22 12:02

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounting', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('display', models.CharField(blank=True, max_length=100, verbose_name='Tên')),
                ('gender', models.CharField(blank=True, choices=[('MALE', 'Nam'), ('FEMALE', 'Nữ'), ('OTHER', 'Khác'), ('UNKNOWN', 'Không xác định')], max_length=50, null=True, verbose_name='Giới tính')),
                ('birth_date', models.DateTimeField(blank=True, null=True, verbose_name='Ngày sinh')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Số điện thoại')),
                ('address', models.CharField(blank=True, max_length=300, verbose_name='Địa chỉ')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='static/images/profiles', verbose_name='Ảnh đại diện')),
                ('tmp_password', models.CharField(blank=True, max_length=50, null=True)),
                ('tmp_password_expired', models.DateTimeField(blank=True, null=True)),
                ('is_admin', models.BooleanField(blank=True, default=False, verbose_name='Là admin')),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CodeSystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=100, verbose_name='Mã')),
                ('name', models.CharField(max_length=200, verbose_name='Tên')),
                ('version', models.CharField(max_length=30)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('DRAFT', 'Nháp'), ('ACTIVE', 'Đang hoạt động'), ('RETIRED', 'Không còn sử dụng')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, verbose_name='Tên')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Số điện thoại')),
                ('address', models.CharField(blank=True, max_length=300, verbose_name='Địa chỉ')),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('DRAFT', 'Nháp'), ('ACTIVE', 'Đang hoạt động'), ('INACTIVE', 'Ngừng hoạt động')], default='DRAFT', max_length=50)),
                ('director', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ModelProperty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(blank=True, max_length=200, verbose_name='Model')),
                ('code', models.CharField(max_length=100, verbose_name='Mã')),
                ('name', models.CharField(max_length=200, verbose_name='Tên')),
                ('datatype', models.CharField(choices=[('INTEGER', 'Integer'), ('FOREIGN_KEY', 'Foreign Key'), ('MANY_TO_MANY_FIELD', 'Many-To-Many Field'), ('BOOLEAN', 'codesystem.datatype.boolean'), ('FLOAT', 'Boolean'), ('DATE', 'Date'), ('DATETIME', 'Datetime'), ('STRING', 'String')], max_length=50, verbose_name='Loại dữ liệu')),
                ('related_model', models.CharField(blank=True, max_length=200, verbose_name='Model liên kết')),
            ],
        ),
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=30, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone', models.CharField(max_length=20)),
                ('address', models.CharField(blank=True, max_length=300)),
                ('tax_number', models.CharField(blank=True, max_length=100)),
                ('is_supplier', models.BooleanField(default=False)),
                ('is_customer', models.BooleanField(default=False)),
                ('is_organization', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('DRAFT', 'Nháp'), ('ACTIVE', 'Đang hoạt động'), ('INACTIVE', 'Ngừng hoạt động')], default='DRAFT', max_length=50)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('bank_acount', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='accounting.bankaccount')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.company')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Coding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=100, verbose_name='Mã')),
                ('display', models.CharField(max_length=200, verbose_name='Tên')),
                ('properties', models.JSONField()),
                ('code_system', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.codesystem')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.company')),
            ],
        ),
        migrations.AddField(
            model_name='codesystem',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.company'),
        ),
        migrations.CreateModel(
            name='AddressBlock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='city_blocks', to='core.coding')),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='district_blocks', to='core.coding')),
                ('ward', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ward_blocks', to='core.coding')),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='address_block',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.addressblock', verbose_name='Khu vực'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
