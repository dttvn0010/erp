# Generated by Django 3.2 on 2021-10-22 12:02

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Exchange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.CharField(max_length=200)),
                ('date', models.DateTimeField()),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.company')),
            ],
        ),
        migrations.CreateModel(
            name='Import',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.CharField(max_length=200)),
                ('date', models.DateTimeField()),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.company')),
            ],
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('DRAFT', 'inventory.status.draft'), ('PLANNED', 'inventory.status.planned'), ('DONE', 'inventory.status.done'), ('CANCELED', 'inventory.status.canceled')], default='DRAFT', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=200)),
                ('posx', models.FloatField(blank=True, null=True)),
                ('posy', models.FloatField(blank=True, null=True)),
                ('posz', models.FloatField(blank=True, null=True)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('DRAFT', 'Nháp'), ('ACTIVE', 'Đang hoạt động'), ('INACTIVE', 'Ngừng hoạt động')], default='DRAFT', max_length=50)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.company')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=100, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('description', models.CharField(blank=True, max_length=500)),
                ('list_price', models.IntegerField()),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('DRAFT', 'Nháp'), ('ACTIVE', 'Đang hoạt động'), ('INACTIVE', 'Ngừng hoạt động')], default='DRAFT', max_length=50)),
                ('properties', models.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProductMove',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.IntegerField()),
                ('inward', models.BooleanField()),
                ('internal', models.BooleanField(default=False)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='outgoing_stock_moves', to='stock.location')),
                ('location_dest', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='incoming_stock_moves', to='stock.location')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='stock.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductQuantity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.IntegerField()),
                ('create_date', models.DateTimeField()),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='stock.location')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='stock.product')),
                ('ref_product_move', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='stock.productmove')),
            ],
        ),
        migrations.CreateModel(
            name='ProductPricePolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_qty', models.IntegerField()),
                ('max_qty', models.IntegerField()),
                ('discount_pctg', models.FloatField()),
                ('price', models.IntegerField()),
                ('date_start', models.DateTimeField()),
                ('date_end', models.DateTimeField(blank=True, null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='stock.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=100, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('description', models.CharField(blank=True, max_length=500)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('DRAFT', 'Nháp'), ('ACTIVE', 'Đang hoạt động'), ('INACTIVE', 'Ngừng hoạt động')], default='DRAFT', max_length=50)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.company')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='stock.productcategory')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='stock.productcategory'),
        ),
        migrations.AddField(
            model_name='product',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.company'),
        ),
        migrations.CreateModel(
            name='InventoryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.IntegerField()),
                ('theoretical_qty', models.IntegerField()),
                ('inventory_date', models.DateTimeField()),
                ('inventory', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='stock.inventory')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='stock.product')),
            ],
        ),
        migrations.AddField(
            model_name='inventory',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='stock.location'),
        ),
        migrations.CreateModel(
            name='ImportItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_import', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock.import')),
                ('product_move', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='product_move_import_item', to='stock.productmove')),
            ],
        ),
        migrations.CreateModel(
            name='ExportItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('export', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock.import')),
                ('product_move', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='product_move_export_item', to='stock.productmove')),
            ],
        ),
        migrations.CreateModel(
            name='Export',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.CharField(max_length=200)),
                ('date', models.DateTimeField()),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.company')),
            ],
        ),
        migrations.CreateModel(
            name='ExchangeItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exchange', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock.exchange')),
                ('product_move', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='product_move_exchange_item', to='stock.productmove')),
            ],
        ),
    ]
